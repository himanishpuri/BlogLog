<style>
    .header {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-bottom: 20px;
    }

    .new-label-btn {
        background-color: #238636;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        cursor: pointer;
    }

    .labels-count {
        color: #8b949e;
        margin-bottom: 10px;
    }

    .label-list {

        border-radius: 6px;
        overflow: hidden;
    }

    .label-item {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        border-bottom: 2px solid var(--gray-light);
    }

    .label-item:last-child {
        border-bottom: none;
    }

    .label-badge {
        padding: 4px 8px;
        border-radius: 12px;
        font-size: 12px;
        margin-right: 16px;
        min-width: 80px;
        text-align: center;
    }

    .label-description {
        flex-grow: 1;
        color: var(--primary-color);
    }

    .action-buttons {
        display: flex;
        gap: 8px;
    }

    .label-count {
        color: #8b949e;
        margin-left: auto;
        margin-right: 16px;
    }

    .btn {
        padding: 8px;
        font-size: 0.7rem;
    }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        align-items: center;
        justify-content: center;
    }

    .modal.active {
        display: flex;
    }

    .modal-content {
        background-color: white;
        padding: 24px;
        border-radius: 6px;
        width: 100%;
        max-width: 480px;
        border: 1px solid #30363d;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
    }

    .modal-title {
        font-size: 20px;
        font-weight: 600;
    }

    .close-btn {
        background: none;
        border: none;
        color: #8b949e;
        cursor: pointer;
        font-size: 20px;
    }

    .form-group {
        margin-bottom: 16px;
    }

    .form-label {
        display: block;
        margin-bottom: 8px;
        color: #c9d1d9;
    }

    .form-input {
        width: 100%;
        padding: 8px 12px;
        border-radius: 6px;
        border: 1px solid #30363d;
        background-color: #dbdcdd;
        color: var(--primary-color);
        margin-bottom: 8px;
    }

    .color-input {
        width: 100px;
        padding: 4px;
        background-color: #dbdcdd;
        border: 1px solid #30363d;
        border-radius: 6px;
        color: #c9d1d9;
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
        margin-top: 24px;
    }

    .btn-cancel {
        background-color: #21262d;
        color: #c9d1d9;
    }

    .btn-create {
        background-color: #238636;
        color: white;
    }

    .preview-label {
        margin-bottom: 16px;
        padding: 16px;
        background-color: #dbdcdd;
        border-radius: 6px;
        border: 1px solid #30363d;
    }
</style>

<div class="header" style="justify-content: space-between;">
    <h1 style="margin: 0px">Manage Tags</h1>
    <button class="new-label-btn" id="newLabelBtn">New label</button>
</div>

<div class="labels-count">
    <%= tags.length %> Tags
</div>

<div class="label-list" id="labelList">
    <% tags.forEach(tag=> { %>
        <div class="label-item">
            <span class="label-badge" style="background-color: <%= tag.color %>">
                <%= tag.name %>
            </span>
            <span class="label-description">
                <%= tag.description %>
            </span>

            <form action="/delete-tag/<%= tag._id %>?_method=DELETE" method="POST">
                <input type="submit" value="Delete" class="btn-delete btn">
            </form>
        </div>
        <% }) %>
</div>

<!-- New Label Modal -->
<div class="modal" id="newLabelModal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="modal-title">Create new label</h2>
            <button class="close-btn" id="closeModal">&times;</button>
        </div>
        <div class="preview-label">
            <span class="label-badge" id="labelPreview">Label preview</span>
        </div>
        <form id="newLabelForm" action="/create-tag" enctype="multipart/form-data">
            <div class="form-group">
                <label class="form-label">Label name</label>
                <input type="text" class="form-input" id="name" name="name" required>
            </div>
            <div class="form-group">
                <label class="form-label">Description</label>
                <input type="text" class="form-input" id="description" name="description">
            </div>
            <div class="form-group">
                <label class="form-label">Color</label>
                <input type="color" class="color-input" id="color" value="#238636" name="color">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-cancel" id="cancelBtn">Cancel</button>
                <button type="submit" class="btn btn-create">Create label</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Modal functionality
    const modal = document.getElementById('newLabelModal');
    const newLabelBtn = document.getElementById('newLabelBtn');
    const closeModal = document.getElementById('closeModal');
    const cancelBtn = document.getElementById('cancelBtn');
    const labelForm = document.getElementById('newLabelForm');
    const labelNameInput = document.getElementById('name');
    const labelDescInput = document.getElementById('description');
    const labelColorInput = document.getElementById('color');
    const labelPreview = document.getElementById('labelPreview');

    newLabelBtn.addEventListener('click', () => {
        modal.classList.add('active');
    });

    function closeModalHandler() {
        modal.classList.remove('active');
        labelForm.reset();
    }

    closeModal.addEventListener('click', closeModalHandler);
    cancelBtn.addEventListener('click', closeModalHandler);

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            closeModalHandler();
        }
    });

    // Update preview as user types
    function updatePreview() {
        const name = labelNameInput.value || 'Label preview';
        const color = labelColorInput.value;
        labelPreview.textContent = name;
        labelPreview.style.backgroundColor = color;
    }

    labelNameInput.addEventListener('input', updatePreview);
    labelColorInput.addEventListener('input', updatePreview);
</script>