<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Add a New Blog</title>
  <style>
    .container {
      max-width: 1300px;
      margin: 0 auto;
      padding: 0 10px;
    }

    button[type='submit'] {
      width: 100%;
      padding: 14px;
      background-color: #ff5f6d;
      color: #fff;
      border: none;
      font-size: 1.2rem;
      cursor: pointer;
      transition: background-color 0.3s ease;
      margin-top: 20px;
    }

    button[type='submit']:hover {
      background-color: #ff4e50;
    }

    /* New classes for styling */
    .blog-form {
      display: flex;
      gap: 20px;
    }

    .main-container {
      flex-grow: 1;
      border-radius: 5px;
    }

    .message {
      background-color: #f0a2a8;
      color: #000000;
    }

    .prop-container {
      border-radius: 5px;
      display: flex;
      flex-direction: column;
    }

    .image-placeholder {
      background-color: #ffffff;
      width: 100%;
      height: 100px;
      border: 0.5px dashed #ddd;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 14px;
      color: #999;
      outline: 1px dashed #000;
    }

    .editor-container {
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    }

    .tab-container {
      display: flex;
      border: 1px solid #d0d7de;
      border-bottom: none;

      background-color: #f6f8fa;
    }

    .tab {
      padding: 8px 16px;
      cursor: pointer;
      border-right: 1px solid #d0d7de;
      color: #24292f;
      background: none;
      border: none;
      font-size: 14px;
    }

    .tab:first-child {
      border-radius: 6px 0 0 0;
    }

    .tab.active {
      background-color: #ffffff;
      border-bottom: 2px solid #0969da;
    }

    .toolbar-button {
      padding: 4px 8px;
      background: none;
      border: 1px solid transparent;
      border-radius: 4px;
      cursor: pointer;
    }

    .toolbar-button:hover {
      background-color: #eaeef2;
      border-color: #d0d7de;
    }

    .content-area {
      width: 100%;
      min-height: 200px;
      padding: 16px;
      border: 1px solid #d0d7de;
      border-radius: 0 0 6px 6px;
      font-family: inherit;
      font-size: 14px;
      line-height: 1.5;
      resize: vertical;
      box-sizing: border-box;
    }

    .preview-area {
      display: none;
      width: 100%;
      min-height: 300px;
      padding: 16px;
      border: 1px solid #d0d7de;
      background-color: #ffffff;
      box-sizing: border-box;
    }

    .helper-text {
      margin-top: 8px;
      color: #57606a;
      font-size: 12px;
    }

    .tag-container {
      display: flex;
      gap: 8px;
      flex-wrap: wrap;
      margin-bottom: 16px;
    }

    .tag {
      padding: 4px 12px;
      border-radius: 16px;
      font-size: 14px;
      display: flex;
      align-items: center;
      gap: 6px;
      color: white;
    }

    .tag .remove {
      cursor: pointer;
      font-weight: bold;
      font-size: 18px;
    }

    .tag-selector {
      position: relative;
      width: 300px;
    }

    .tag-filter {
      width: 100%;
      padding: 8px 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 4px;
    }

    .tag-dropdown {
      position: absolute;
      width: 100%;
      max-height: 300px;
      overflow-y: auto;
      background: white;
      border: 1px solid #ddd;
      border-radius: 4px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      display: none;
      /* Hidden by default */
    }

    .tag-dropdown.show {
      display: block;
      /* Show when class is added */
    }

    .tag-option {
      padding: 8px 12px;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .tag-option:hover {
      background: #f5f5f5;
    }

    .tag-color {
      width: 12px;
      height: 12px;
      border-radius: 3px;
    }

    .tag-info {
      flex: 1;
    }

    .tag-name {
      font-weight: 500;
      margin-bottom: 2px;
    }

    .tag-description {
      font-size: 12px;
      color: #666;
    }

    .selected {
      background: #f0f0f0;
    }

    /* Responsive styles */
    @media (max-width: 768px) {
      .blog-form {
        flex-direction: column;
        /* Stack elements vertically */
      }

      .main-container,
      .prop-container {
        width: 100%;
        /* Full width on small screens */
        margin-bottom: 10px;
        /* Space between elements */
      }

      button {
        font-size: 1rem;
        /* Smaller button text */
      }

      .image-placeholder {
        height: 80px;
        /* Adjust height for smaller screens */
      }
    }
  </style>
</head>


<a href="/dashboard">&larr; Back</a>
<h1 style="margin: 0px">Add New Post</h1>
<hr>

<form id="postForm" class="blog-form" method="post" action="/add-post" enctype="multipart/form-data"
  onsubmit="createPost()">
  <div class="main-container">
    <% if (typeof message !=='undefined' && message.errors && message.errors.length) { %>
      <div class="message">
        <% message.errors.forEach(err=> { %>
          <p>
            <%= err.msg %>
          </p>
          <% }); %>
      </div>
      <% } %>

        <label for="blog-title"><b>Blog Title</b></label>
        <input name="title" type="text" id="blog-title" placeholder="Enter your blog title..." />

        <label for="blog-content"><b>Blog Content</b></label>

        <div class="editor-container">
          <div class="tab-container">
            <button type="button" class="tab active" onclick="switchTab('write')">Write</button>
            <button type="button" class="tab" onclick="switchTab('preview')">Preview</button>
          </div>

          <textarea id="editor" rows="10" name="body" placeholder="Write your blog content here..."></textarea>
          <div id="preview" class="preview-area"></div>

          <div class="helper-text">Markdown is supported</div>
        </div>
  </div>

  <div class="prop-container">
    <div>
      <label for="author-name"><b>Author Name</b></label>
      <input type="text" id="author-name" placeholder="Your name..." name="author" />
    </div>

    <div style="display: flex; flex-direction: column;">
      <label for="poster"><b>Blog Poster</b></label>
      <input type="file" id="poster" name="poster" onchange="loadFile(event)">
      <img id="blogImage" src="#" alt="your image" style="width: 100%; height: 300px;display: none;" />
    </div>

    <br>
    <div style="width: 300px;">

      <div
        style="display: flex; flex-direction: row; justify-content: space-between; align-items: baseline; margin-bottom: 10px;">
        <label for="tags"><b>Tags</b></label>

        <svg id="tagFilter" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="20" height="20"
          viewBox="0 0 32 32">
          <path
            d="M 13.1875 3 L 13.03125 3.8125 L 12.4375 6.78125 C 11.484375 7.15625 10.625 7.683594 9.84375 8.3125 L 6.9375 7.3125 L 6.15625 7.0625 L 5.75 7.78125 L 3.75 11.21875 L 3.34375 11.9375 L 3.9375 12.46875 L 6.1875 14.4375 C 6.105469 14.949219 6 15.460938 6 16 C 6 16.539063 6.105469 17.050781 6.1875 17.5625 L 3.9375 19.53125 L 3.34375 20.0625 L 3.75 20.78125 L 5.75 24.21875 L 6.15625 24.9375 L 6.9375 24.6875 L 9.84375 23.6875 C 10.625 24.316406 11.484375 24.84375 12.4375 25.21875 L 13.03125 28.1875 L 13.1875 29 L 18.8125 29 L 18.96875 28.1875 L 19.5625 25.21875 C 20.515625 24.84375 21.375 24.316406 22.15625 23.6875 L 25.0625 24.6875 L 25.84375 24.9375 L 26.25 24.21875 L 28.25 20.78125 L 28.65625 20.0625 L 28.0625 19.53125 L 25.8125 17.5625 C 25.894531 17.050781 26 16.539063 26 16 C 26 15.460938 25.894531 14.949219 25.8125 14.4375 L 28.0625 12.46875 L 28.65625 11.9375 L 28.25 11.21875 L 26.25 7.78125 L 25.84375 7.0625 L 25.0625 7.3125 L 22.15625 8.3125 C 21.375 7.683594 20.515625 7.15625 19.5625 6.78125 L 18.96875 3.8125 L 18.8125 3 Z M 14.8125 5 L 17.1875 5 L 17.6875 7.59375 L 17.8125 8.1875 L 18.375 8.375 C 19.511719 8.730469 20.542969 9.332031 21.40625 10.125 L 21.84375 10.53125 L 22.40625 10.34375 L 24.9375 9.46875 L 26.125 11.5 L 24.125 13.28125 L 23.65625 13.65625 L 23.8125 14.25 C 23.941406 14.820313 24 15.402344 24 16 C 24 16.597656 23.941406 17.179688 23.8125 17.75 L 23.6875 18.34375 L 24.125 18.71875 L 26.125 20.5 L 24.9375 22.53125 L 22.40625 21.65625 L 21.84375 21.46875 L 21.40625 21.875 C 20.542969 22.667969 19.511719 23.269531 18.375 23.625 L 17.8125 23.8125 L 17.6875 24.40625 L 17.1875 27 L 14.8125 27 L 14.3125 24.40625 L 14.1875 23.8125 L 13.625 23.625 C 12.488281 23.269531 11.457031 22.667969 10.59375 21.875 L 10.15625 21.46875 L 9.59375 21.65625 L 7.0625 22.53125 L 5.875 20.5 L 7.875 18.71875 L 8.34375 18.34375 L 8.1875 17.75 C 8.058594 17.179688 8 16.597656 8 16 C 8 15.402344 8.058594 14.820313 8.1875 14.25 L 8.34375 13.65625 L 7.875 13.28125 L 5.875 11.5 L 7.0625 9.46875 L 9.59375 10.34375 L 10.15625 10.53125 L 10.59375 10.125 C 11.457031 9.332031 12.488281 8.730469 13.625 8.375 L 14.1875 8.1875 L 14.3125 7.59375 Z M 16 11 C 13.25 11 11 13.25 11 16 C 11 18.75 13.25 21 16 21 C 18.75 21 21 18.75 21 16 C 21 13.25 18.75 11 16 11 Z M 16 13 C 17.667969 13 19 14.332031 19 16 C 19 17.667969 17.667969 19 16 19 C 14.332031 19 13 17.667969 13 16 C 13 14.332031 14.332031 13 16 13 Z">
          </path>
        </svg>

      </div>

      <input type="text" id="tags" name="tags" style="display:none" />
      <div id="tagSystem">
        <div class="tag-container" id="selectedTags"></div>
        <div class="tag-selector">
          <div class="tag-dropdown" id="tagDropdown">
            <div class="tags-list" id="tagsList">
              <% tags.forEach(tag=> { %>
                <div id="<%= tag._id %>" class="tag-option" onclick="toggleTag('<%= tag._id %>', this)">
                  <span class="tag-color" style="background-color: <%= tag.color %>"></span>
                  <div class="tag-info">
                    <div class="tag-name">
                      <%= tag.name %>
                    </div>
                    <div class="tag-description">
                      <%= tag.description %>
                    </div>
                  </div>
                </div>
                <% }) %>

                  <div class="tag-option" onclick="location.href = '/tags'">
                    <span class="tag-color" style="background-color: black"></span>
                    <div class="tag-info">
                      <div class="tag-name">
                        create tag
                      </div>
                      <div class="tag-description">
                        click here to create a brand new tag
                      </div>
                    </div>
                  </div>


            </div>


          </div>
        </div>
      </div>
    </div>

    <button type="submit">Publish Blog</button>

  </div>
</form>


<script src="https://cdnjs.cloudflare.com/ajax/libs/markdown-it/11.0.0/markdown-it.min.js"
  integrity="sha256-3mv+NUxFuBg26MtcnuN2X37WUxuGunWCCiG2YCSBjNc=" crossorigin="anonymous"></script>


<script>
  let mdit = new markdownit({ breaks: true });

  function loadFile(event) {
    var image = document.getElementById('blogImage');
    image.src = URL.createObjectURL(event.target.files[0]);
    image.style.display = 'block';
  };

  function switchTab(tab) {
    var editor = document.getElementById('editor');
    var preview = document.getElementById('preview');
    var tabs = document.querySelectorAll('.tab');

    // Remove active class from all tabs
    tabs.forEach(function (t) {
      t.classList.remove('active');
    });

    // Add active class to clicked tab
    if (tab === 'write') {
      tabs[0].classList.add('active');
      editor.style.display = 'block';
      preview.style.display = 'none';
    } else {
      tabs[1].classList.add('active');
      editor.style.display = 'none';
      preview.style.display = 'block';
      let parsedHtml = mdit.render(editor.value)
      preview.innerHTML = parsedHtml
    }
  }

</script>

<script>
  let selectedTags = []

  function toggleTag(tagId, element) {
    tag = selectedTags.find(x => x.id == tagId)

    if (tag) {
      selectedTags = selectedTags.filter(x => x.id != tagId)
      document.getElementById(tagId).classList.remove('selected')
    } else {
      selectedTags.push({
        id: tagId,
        name: element.querySelector('.tag-name').innerText,
        description: element.querySelector('.tag-description').innerText
      })

      element.classList.add('selected')
    }

    renderTags()
  }

  function renderTags() {
    const container = document.getElementById('selectedTags');
    container.innerHTML = '';

    selectedTags.forEach(tag => {
      const tagElement = document.createElement('span');
      tagElement.className = 'tag';
      tagElement.style.backgroundColor = 'black';
      tagElement.innerHTML = `
      ${tag.name}
      <span class="remove" onclick="toggleTag('${tag.id}')">×</span>
    `;
      container.appendChild(tagElement);
    });
  }


  function showDropdown() {
    document.getElementById('tagDropdown').classList.add('show');
  }

  function hideDropdown() {
    document.getElementById('tagDropdown').classList.remove('show');
  }

  function createPost() {
    const tagsInput = document.getElementById('tags');
    tagsInput.value = selectedTags.map(x => x.id).join(',');
  }

  // Set up event listeners
  const tagFilter = document.getElementById('tagFilter');
  const tagSelector = document.querySelector('.tag-selector');

  // Show dropdown when clicking the filter input
  tagFilter.addEventListener('click', (e) => {
    e.stopPropagation();
    showDropdown();
  });

  // Handle clicks inside the dropdown
  tagSelector.addEventListener('click', (e) => {
    e.stopPropagation();
  });

  // Hide dropdown when clicking outside
  document.addEventListener('click', () => {
    hideDropdown();
  });

  // Show dropdown when focusing the input
  tagFilter.addEventListener('focus', () => {
    showDropdown();
  });
</script>